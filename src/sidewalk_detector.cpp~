#include "ros/ros.h"
#include "std_msgs/String.h"
#include "sensor_msgs/PointCloud2.h"
#include <pcl_conversions/pcl_conversions.h>
#include <pcl/point_cloud.h>
#include <pcl/point_types.h>
#include <pcl/visualization/cloud_viewer.h>

void pointHandleCallback(const sensor_msgs::PointCloud2::ConstPtr& msg) {
    pcl::PCLPointCloud2 pcl_pc2;
    pcl_conversions::toPCL(*msg,pcl_pc2);
    pcl::PointCloud<pcl::PointXYZ>::Ptr inCloud(new pcl::PointCloud<pcl::PointXYZ>);
    pcl::fromPCLPointCloud2(pcl_pc2,*inCloud);

    pcl::visualization::CloudViewer viewer ("Simple Cloud Viewer");
    viewer.showCloud (inCloud);
    
}

int main(int argc, char **argv)
{
    ros::init(argc, argv, "sidewalk_detector");
    ros::NodeHandle n;

    ros::Subscriber sub = n.subscribe("/camera/depth/points", 1000, pointHandleCallback);

    ros::spin();

    return 0;
}
